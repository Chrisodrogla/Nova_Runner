name: Metrics to SQL

on:
  workflow_dispatch:
#  schedule:
#    - cron: "0 20 * * *" runs at 4:00 am ph time

jobs:
  run_python_script:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas selenium pyodbc
        pip install gspread oauth2client pandas gspread-dataframe
        pip install google-auth google-auth-oauthlib google-auth-httplib2 google-api-python-client

    - name: Install OpenVPN
      run: |
        sudo apt-get update
        sudo apt-get install -y openvpn

    - name: Create OpenVPN Configuration
      env:
        VPN_SERVER: ${{ secrets.VPN_SERVER }}
        VPN_PORT: ${{ secrets.VPN_PORT }}
        VPN_USERNAME: ${{ secrets.VPN_USERNAME }}
        VPN_PASSWORD: ${{ secrets.VPN_PASSWORD }}
      run: |
        echo "client
        dev tun
        proto udp
        remote $VPN_SERVER $VPN_PORT
        resolv-retry infinite
        nobind
        persist-key
        persist-tun
        remote-cert-tls server
        auth SHA256
        cipher AES-256-CBC
        comp-lzo
        verb 3
        auth-user-pass" > openvpn-config.ovpn
        echo -e "$VPN_USERNAME\n$VPN_PASSWORD" > auth.txt
        sudo openvpn --config openvpn-config.ovpn --auth-user-pass auth.txt &
        sleep 30  # Wait for VPN to connect

    - name: Run scraper script
      env:
        GOOGLE_SHEETS_CREDENTIALS: ${{ secrets.GOOGLE_SHEETS_CREDENTIALS }}
        SECRET_CHRISTIANSQL_STRING: ${{ secrets.SECRET_CHRISTIANSQL_STRING }}
      run: |
        python scraper/scraper/Listing_Url/SQL_Connectors/Metrics.py
